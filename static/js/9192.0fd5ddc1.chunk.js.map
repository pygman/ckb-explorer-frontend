{"version":3,"file":"static/js/9192.0fd5ddc1.chunk.js","mappings":"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","sources":["components/Pagination/styled.tsx","components/Pagination/index.tsx","components/TransactionItem/TransactionItemCell/styled.tsx","webpack://ckb-explorer-fronted/./src/components/TransactionItem/TransactionItemCell/index.module.scss?7bce","components/TransactionItem/TransactionItemCell/index.tsx","components/TransactionItem/TransactionItemCellList/styled.tsx","components/TransactionItem/TransactionItemCellList/index.tsx","components/TransactionItem/TransactionIncome/styled.tsx","components/TransactionItem/TransactionIncome/index.tsx","components/TransactionItem/index.tsx","components/TransactionItem/styled.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const PaginationPanel = styled.div`\n  display: flex;\n  width: 100%;\n  height: 50px;\n  background: white;\n  flex-direction: row;\n  justify-content: center;\n  border-radius: 0 0 6px 6px;\n  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12);\n  background-color: #ffffff;\n\n  @media (max-width: 750px) {\n    margin-bottom: 30px;\n  }\n`\n\nexport const PaginationLeftItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 3;\n  font-size: 14px;\n  text-align: center;\n  color: #000000;\n  padding-left: 20px;\n\n  @media (max-width: 750px) {\n    padding-left: 0px;\n    justify-content: flex-start;\n  }\n\n  .pagination__first__button {\n    height: 30px;\n    line-height: 30px;\n    padding: 0 8px;\n    border-radius: 6px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: #f5f5f5;\n    letter-spacing: 1px;\n    color: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isFirstPage ? '#969696' : '#000000')};\n    pointer-events: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isFirstPage ? 'none' : 'auto')};\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    @media (max-width: 750px) {\n      display: none;\n    }\n  }\n\n  .pagination__left__button {\n    margin-left: 20px;\n    width: 30px;\n    height: 30px;\n    line-height: 30px;\n    background: #f5f5f5;\n    border-radius: 6px;\n    pointer-events: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isFirstPage ? 'none' : 'auto')};\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    @media (max-width: 750px) {\n      margin-left: 10px;\n    }\n\n    > img {\n      width: 9px;\n      height: 15px;\n    }\n  }\n\n  .pagination__middle__label {\n    height: 30px;\n    display: flex;\n    align-items: center;\n    background: #f5f5f5;\n    border-radius: 6px;\n    text-align: center;\n    font-size: 12px;\n    padding: 0 12px;\n    margin-left: 20px;\n\n    @media (max-width: 750px) {\n      background: white;\n      border-radius: 0px;\n      margin-left: 10px;\n      padding: 0;\n    }\n\n    img {\n      width: 14px;\n      height: 14px;\n      margin-left: 4px;\n    }\n  }\n\n  .pagination__right__button {\n    margin-left: 20px;\n    background: #f5f5f5;\n    width: 30px;\n    height: 30px;\n    line-height: 30px;\n    border-radius: 6px;\n    pointer-events: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isLastPage ? 'none' : 'auto')};\n\n    @media (max-width: 750px) {\n      margin-left: 10px;\n    }\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    > img {\n      width: 9px;\n      height: 15px;\n    }\n  }\n\n  .pagination__last__button {\n    height: 30px;\n    line-height: 30px;\n    padding: 0 8px;\n    border-radius: 6px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: #f5f5f5;\n    letter-spacing: 1px;\n    margin-left: 20px;\n    color: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isLastPage ? '#969696' : '#000000')};\n    pointer-events: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isLastPage ? 'none' : 'auto')};\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    @media (max-width: 750px) {\n      display: none;\n    }\n  }\n`\n\nexport const PaginationRightItem = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 2;\n  font-size: 14px;\n  color: #000000;\n  padding-right: 20px;\n\n  @media (max-width: 750px) {\n    padding-right: 0px;\n    justify-content: flex-end;\n  }\n\n  .pagination__input__page {\n    width: 120px;\n    height: 30px;\n    border: none;\n    border-radius: 6px;\n    background-color: #f5f5f5;\n    color: grey;\n    outline: none;\n    margin-right: 20px;\n    padding-left: 10px;\n\n    @media (max-width: 750px) {\n      width: 60px;\n      margin-right: 0px;\n      padding-left: 8px;\n      font-size: 12px;\n    }\n  }\n\n  .pagination__page__label {\n    margin-right: 20px;\n\n    @media (max-width: 750px) {\n      display: none;\n    }\n  }\n\n  .pagination__goto__page {\n    height: 30px;\n    line-height: 30px;\n    padding: 0 8px;\n    border-radius: 6px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: #f5f5f5;\n    letter-spacing: 1px;\n    margin-left: 20px;\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    @media (max-width: 750px) {\n      margin: 0 10px;\n      font-size: 12px;\n    }\n  }\n`\n","import { useState } from 'react'\nimport { Tooltip } from 'antd'\nimport { PaginationLeftItem, PaginationRightItem, PaginationPanel } from './styled'\nimport LeftBlack from '../../assets/pagination_black_left.png'\nimport RightBlack from '../../assets/pagination_black_right.png'\nimport LeftGrey from '../../assets/pagination_grey_left.png'\nimport RightGrey from '../../assets/pagination_grey_right.png'\nimport HelpIcon from '../../assets/qa_help.png'\nimport i18n from '../../utils/i18n'\nimport { useIsMobile } from '../../utils/hook'\nimport SimpleButton from '../SimpleButton'\n\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  gotoPage = currentPage === totalPages ? totalPages : currentPage + 1,\n  onChange,\n  className,\n  annotation,\n}: {\n  currentPage: number\n  totalPages: number\n  gotoPage?: number\n  onChange: (page: number) => void\n  className?: string\n  annotation?: string\n}) => {\n  const isMobile = useIsMobile()\n  const [inputPage, setInputPage] = useState(gotoPage)\n\n  const total = Math.max(totalPages, 1)\n  const current = Math.min(Math.max(currentPage, 1), totalPages)\n\n  const mobilePagination = `${i18n.t('pagination.total_page')} ${total} ${i18n.t('pagination.end_page')}`\n  const pcPagination = `${i18n.t('pagination.current_page')} ${current} ${i18n.t(\n    'pagination.of_page',\n  )} ${total} ${i18n.t('pagination.end_page')}`\n\n  const annotationComp = annotation ? (\n    <Tooltip placement=\"top\" title={annotation}>\n      <img src={HelpIcon} alt=\"annotation\" />\n    </Tooltip>\n  ) : null\n\n  const changePage = (page: number) => {\n    if (page && page >= 1 && page <= total) {\n      onChange(page)\n      setInputPage(Math.min(page + 1, total))\n    }\n  }\n\n  return (\n    <PaginationPanel className={className}>\n      <PaginationLeftItem isFirstPage={current === 1} isLastPage={current === total}>\n        <SimpleButton className=\"pagination__first__button\" onClick={() => changePage(1)}>\n          {i18n.t('pagination.first')}\n        </SimpleButton>\n        <SimpleButton className=\"pagination__left__button\" onClick={() => changePage(current - 1)}>\n          <img src={current === 1 ? LeftGrey : LeftBlack} alt=\"left button\" />\n        </SimpleButton>\n\n        {!isMobile && (\n          <span className=\"pagination__middle__label\">\n            {pcPagination}\n            {annotationComp}\n          </span>\n        )}\n        <SimpleButton className=\"pagination__right__button\" onClick={() => changePage(current + 1)}>\n          <img src={current === total ? RightGrey : RightBlack} alt=\"right button\" />\n        </SimpleButton>\n        {isMobile && (\n          <span className=\"pagination__middle__label\">\n            {mobilePagination}\n            {annotationComp}\n          </span>\n        )}\n\n        <SimpleButton className=\"pagination__last__button\" onClick={() => changePage(total)}>\n          {i18n.t('pagination.last')}\n        </SimpleButton>\n      </PaginationLeftItem>\n      <PaginationRightItem>\n        <span className=\"pagination__page__label\">{i18n.t('pagination.page')}</span>\n        <input\n          type=\"text\"\n          pattern=\"[0-9]*\"\n          className=\"pagination__input__page\"\n          value={inputPage}\n          onChange={(event: any) => {\n            const pageNo = parseInt(event.target.value, 10)\n            setInputPage(Number.isNaN(pageNo) ? event.target.value : Math.min(pageNo, total))\n          }}\n          onKeyUp={(event: any) => {\n            if (event.keyCode === 13) {\n              changePage(inputPage)\n            }\n          }}\n        />\n        <SimpleButton className=\"pagination__goto__page\" onClick={() => changePage(inputPage)}>\n          {i18n.t('pagination.goto')}\n        </SimpleButton>\n      </PaginationRightItem>\n    </PaginationPanel>\n  )\n}\n\nexport default Pagination\n","import styled from 'styled-components'\n\nexport const TransactionCellPanel = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 16px;\n\n  background: ${({ highLight = false }: { highLight?: boolean }) => (highLight ? '' : '#f5f5f5')};\n\n  @media (min-width: 750px) {\n    height: 20px;\n  }\n\n  @media (max-width: 750px) {\n    justify-content: normal;\n    align-items: flex-start;\n    flex-direction: column;\n  }\n\n  .transaction__cell_address {\n    color: ${({ highLight = false, theme }: { highLight?: boolean; theme: any }) =>\n      highLight ? `${theme.primary}` : '#000000'};\n\n    font-weight: 500;\n    min-width: 0;\n    width: 100%;\n    height: 20px;\n    display: flex;\n    align-items: center;\n\n    @media (max-width: 750px) {\n      height: 16px;\n      font-size: 14px;\n    }\n\n    a {\n      color: ${({ theme }: { theme: any }) => `${theme.primary}`};\n    }\n\n    a:hover {\n      color: ${({ theme }: { theme: any }) => `${theme.primary}`};\n    }\n  }\n`\n\nexport const TransactionCellCapacityPanel = styled.div`\n  flex-shrink: 0;\n  color: #000000;\n  margin-left: 15px;\n  display: flex;\n  max-height: 40px;\n  align-items: center;\n\n  @media (max-width: 750px) {\n    margin-left: 0px;\n    margin-top: 5px;\n    height: 16px;\n    width: 100%;\n    justify-content: flex-end;\n  }\n\n  > span {\n    margin-left: 5px;\n  }\n\n  .transaction__cell__without__icon {\n    margin-right: 21px;\n  }\n`\n\nexport const TransactionCellWithdraw = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 2px;\n\n  img {\n    margin-left: 5px;\n    width: 16px;\n    height: auto;\n    cursor: pointer;\n\n    @media (max-width: 750px) {\n      width: 12px;\n      height: auto;\n    }\n  }\n`\n\nexport const TransactionCellUDTPanel = styled.div`\n  .transaction__cell__udt__icon {\n    margin-left: 5px;\n    width: 16px;\n    height: auto;\n    cursor: pointer;\n\n    @media (max-width: 750px) {\n      width: 12px;\n      height: auto;\n      margin-bottom: 3px;\n    }\n  }\n`\n\nexport const WithdrawInfoPanel = styled.div`\n  > p {\n    font-size: 16px;\n    font-weight: 600;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 16px;\n\n    @media (max-width: 750px) {\n      font-size: 11px;\n      margin-bottom: 8px;\n    }\n  }\n`\n\nexport const WithdrawItemPanel = styled.div`\n  margin: 10px;\n  display: flex;\n\n  @media (max-width: 750px) {\n    margin: 5px;\n  }\n\n  .withdraw__info_title {\n    font-size: 14px;\n    font-weight: 450;\n    width: ${({ width }: { width: string }) => {\n      switch (width) {\n        case 'long':\n          return '180px'\n        case 'medium':\n          return '150px'\n        default:\n          return '85px'\n      }\n    }};\n\n    @media (max-width: 750px) {\n      font-size: 10px;\n      width: ${({ width }: { width: string }) => {\n        switch (width) {\n          case 'long':\n            return '130px'\n          case 'medium':\n            return '105px'\n          default:\n            return '60px'\n        }\n      }};\n    }\n\n    @media (max-width: 375px) {\n      font-size: 9px;\n      width: ${({ width }: { width: string }) => {\n        switch (width) {\n          case 'long':\n            return '145px'\n          case 'medium':\n            return '115px'\n          default:\n            return '65px'\n        }\n      }};\n    }\n  }\n\n  .withdraw__info_content {\n    font-size: 14px;\n\n    @media (max-width: 750px) {\n      font-size: 10px;\n    }\n\n    @media (max-width: 375px) {\n      font-size: 9px;\n    }\n  }\n\n  a {\n    color: ${({ theme }: { theme: any }) => theme.primary};\n  }\n\n  a:hover {\n    color: ${({ theme }: { theme: any }) => `${theme.primary}`};\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport default {\"addressTextWithAlias\":\"TransactionItemCell_addressTextWithAlias__1YSLr\",\"icon\":\"TransactionItemCell_icon__NXn4Q\",\"text\":\"TransactionItemCell_text__RoMn0\",\"link\":\"TransactionItemCell_link__WipZ4\",\"addressWidthModify\":\"TransactionItemCell_addressWidthModify__ypKoh\"};","import { FC, ReactNode } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Popover, Tooltip } from 'antd'\nimport classNames from 'classnames'\nimport NervosDAOCellIcon from '../../../assets/nervos_dao_cell.png'\nimport NervosDAOWithdrawingIcon from '../../../assets/nervos_dao_withdrawing.png'\nimport UDTTokenIcon from '../../../assets/udt_token.png'\nimport i18n from '../../../utils/i18n'\nimport { localeNumberString, parseUDTAmount } from '../../../utils/number'\nimport { shannonToCkb, shannonToCkbDecimal } from '../../../utils/util'\nimport {\n  TransactionCellPanel,\n  TransactionCellCapacityPanel,\n  WithdrawInfoPanel,\n  WithdrawItemPanel,\n  TransactionCellWithdraw,\n  TransactionCellUDTPanel,\n} from './styled'\nimport { CellType } from '../../../constants/common'\nimport TransactionCellArrow from '../../Transaction/TransactionCellArrow'\nimport DecimalCapacity from '../../DecimalCapacity'\nimport { useAppState } from '../../../contexts/providers'\nimport { parseDiffDate } from '../../../utils/date'\nimport Cellbase from '../../Transaction/Cellbase'\nimport styles from './index.module.scss'\nimport { useDASAccount } from '../../../contexts/providers/dasQuery'\nimport { ReactComponent as BitAccountIcon } from '../../../assets/bit_account.svg'\nimport { useBoolean, useIsMobile } from '../../../utils/hook'\nimport CopyTooltipText from '../../Text/CopyTooltipText'\nimport EllipsisMiddle from '../../EllipsisMiddle'\n\nconst isDaoDepositCell = (cellType: State.CellTypes) => cellType === 'nervos_dao_deposit'\n\nconst isDaoWithdrawCell = (cellType: State.CellTypes) => cellType === 'nervos_dao_withdrawing'\n\nconst isDaoCell = (cellType: State.CellTypes) => isDaoDepositCell(cellType) || isDaoWithdrawCell(cellType)\n\nconst AddressTextWithAlias: FC<{\n  address: string\n  to?: string\n}> = ({ address, to }) => {\n  const alias = useDASAccount(address)\n\n  const [truncated, truncatedCtl] = useBoolean(false)\n\n  const content = (\n    <Tooltip trigger={truncated || alias ? 'hover' : []} placement=\"top\" title={<CopyTooltipText content={address} />}>\n      <EllipsisMiddle className={classNames('monospace', styles.text)} onTruncateStateChange={truncatedCtl.toggle}>\n        {alias ?? address}\n      </EllipsisMiddle>\n    </Tooltip>\n  )\n\n  return (\n    <div className={classNames(styles.addressTextWithAlias, styles.addressWidthModify)}>\n      {alias && (\n        <Tooltip title=\".bit Name\">\n          <BitAccountIcon className={styles.icon} />\n        </Tooltip>\n      )}\n\n      {to != null ? (\n        <Link className={styles.link} to={to}>\n          {content}\n        </Link>\n      ) : (\n        content\n      )}\n    </div>\n  )\n}\n\nconst udtAmount = (udt: State.UDTInfo) =>\n  udt.published\n    ? `${parseUDTAmount(udt.amount, udt.decimal)} ${udt.uan || udt.symbol}`\n    : `${i18n.t('udt.unknown_token')} #${udt.typeHash.substring(udt.typeHash.length - 4)}`\n\nconst WithdrawPopoverItem = ({\n  width,\n  title,\n  content,\n}: {\n  width: string\n  title: string\n  content: ReactNode | string\n}) => (\n  <WithdrawItemPanel width={width}>\n    <div className=\"withdraw__info_title\">{title}</div>\n    <div className=\"withdraw__info_content\">{content}</div>\n  </WithdrawItemPanel>\n)\n\nconst WithdrawPopoverInfo = ({ cell }: { cell: State.Cell }) => {\n  const isMobile = useIsMobile()\n  const { app } = useAppState()\n  let width = 'short'\n  if (app.language === 'en') {\n    width = isDaoDepositCell(cell.cellType) ? 'long' : 'medium'\n  }\n  return (\n    <WithdrawInfoPanel>\n      <p>\n        {isDaoWithdrawCell(cell.cellType)\n          ? i18n.t('nervos_dao.withdraw_tooltip')\n          : i18n.t('nervos_dao.withdraw_request_tooltip')}\n      </p>\n      <WithdrawPopoverItem\n        width={width}\n        title={`${i18n.t('nervos_dao.deposit_capacity')}: `}\n        content={\n          <DecimalCapacity value={localeNumberString(shannonToCkb(cell.capacity))} fontSize={isMobile ? '8px' : ''} />\n        }\n      />\n      <WithdrawPopoverItem\n        width={width}\n        title={`${i18n.t(\n          isDaoWithdrawCell(cell.cellType) ? 'nervos_dao.compensation' : 'nervos_dao.unissued_compensation',\n        )}: `}\n        content={\n          <DecimalCapacity value={localeNumberString(shannonToCkb(cell.interest))} fontSize={isMobile ? '8px' : ''} />\n        }\n      />\n      <WithdrawPopoverItem\n        width={width}\n        title={`${i18n.t('nervos_dao.compensation_period')}: `}\n        content={\n          <>\n            <span>{`${i18n.t('block.block')} `}</span>\n            <Link to={`/block/${cell.compensationStartedBlockNumber}`}>\n              <span>{localeNumberString(cell.compensationStartedBlockNumber)}</span>\n            </Link>\n            <span> - </span>\n            <Link to={`/block/${cell.compensationStartedBlockNumber}`}>\n              <span>{localeNumberString(cell.compensationEndedBlockNumber)}</span>\n            </Link>\n          </>\n        }\n      />\n      <WithdrawPopoverItem\n        width={width}\n        title={`${i18n.t('nervos_dao.compensation_time')}: `}\n        content={parseDiffDate(cell.compensationStartedTimestamp, cell.compensationEndedTimestamp)}\n      />\n      {isDaoWithdrawCell(cell.cellType) && (\n        <>\n          <WithdrawPopoverItem\n            width={width}\n            title={`${i18n.t('nervos_dao.locked_period')}: `}\n            content={\n              <>\n                <span>{`${i18n.t('block.block')} `}</span>\n                <Link to={`/block/${cell.compensationStartedBlockNumber}`}>\n                  <span>{localeNumberString(cell.compensationStartedBlockNumber)}</span>\n                </Link>\n                <span> - </span>\n                <Link to={`/block/${cell.lockedUntilBlockNumber}`}>\n                  <span>{localeNumberString(cell.lockedUntilBlockNumber)}</span>\n                </Link>\n              </>\n            }\n          />\n          <WithdrawPopoverItem\n            width={width}\n            title={`${i18n.t('nervos_dao.locked_time')}: `}\n            content={parseDiffDate(cell.compensationStartedTimestamp, cell.lockedUntilBlockTimestamp)}\n          />\n        </>\n      )}\n    </WithdrawInfoPanel>\n  )\n}\n\nconst TransactionCellNervosDao = ({ cell, cellType }: { cell: State.Cell; cellType: CellType }) => {\n  const isMobile = useIsMobile()\n  return (\n    <TransactionCellWithdraw>\n      <DecimalCapacity value={localeNumberString(shannonToCkb(cell.capacity))} />\n      {cellType === CellType.Input ? (\n        <Popover placement=\"right\" title=\"\" content={<WithdrawPopoverInfo cell={cell} />} trigger=\"click\">\n          <img src={isDaoWithdrawCell(cell.cellType) ? NervosDAOWithdrawingIcon : NervosDAOCellIcon} alt=\"withdraw\" />\n        </Popover>\n      ) : (\n        <Tooltip\n          placement={isMobile ? 'topRight' : 'top'}\n          title={i18n.t(\n            isDaoDepositCell(cell.cellType) ? 'nervos_dao.deposit_tooltip' : 'nervos_dao.calculation_tooltip',\n          )}\n          arrowPointAtCenter\n          overlayStyle={{\n            fontSize: '14px',\n          }}\n        >\n          <img src={isDaoWithdrawCell(cell.cellType) ? NervosDAOWithdrawingIcon : NervosDAOCellIcon} alt=\"withdraw\" />\n        </Tooltip>\n      )}\n    </TransactionCellWithdraw>\n  )\n}\n\nconst TransactionCellUDT = ({ cell }: { cell: State.Cell }) => {\n  const isMobile = useIsMobile()\n  return (\n    <TransactionCellUDTPanel>\n      <span>{udtAmount(cell.udtInfo)}</span>\n      <Tooltip\n        placement={isMobile ? 'topRight' : 'top'}\n        title={`Capacity: ${localeNumberString(shannonToCkbDecimal(cell.capacity, 8))} CKB`}\n        arrowPointAtCenter\n        overlayStyle={{\n          fontSize: '14px',\n        }}\n      >\n        <img src={UDTTokenIcon} className=\"transaction__cell__udt__icon\" alt=\"udt token\" />\n      </Tooltip>\n    </TransactionCellUDTPanel>\n  )\n}\n\nconst TransactionCellCapacity = ({ cell, cellType }: { cell: State.Cell; cellType: CellType }) => {\n  if (isDaoCell(cell.cellType)) {\n    return <TransactionCellNervosDao cell={cell} cellType={cellType} />\n  }\n  if (cell.udtInfo && cell.udtInfo.typeHash) {\n    return <TransactionCellUDT cell={cell} />\n  }\n  return (\n    <div className=\"transaction__cell__without__icon\">\n      <DecimalCapacity value={localeNumberString(shannonToCkb(cell.capacity))} />\n    </div>\n  )\n}\n\nconst TransactionCell = ({ cell, address, cellType }: { cell: State.Cell; address?: string; cellType: CellType }) => {\n  if (cell.fromCellbase) {\n    return <Cellbase cell={cell} cellType={cellType} />\n  }\n\n  let addressText = i18n.t('address.unable_decode_address')\n  let highLight = false\n  if (cell.addressHash) {\n    addressText = cell.addressHash\n    highLight = cell.addressHash !== address\n  }\n\n  return (\n    <TransactionCellPanel highLight={highLight}>\n      <div className=\"transaction__cell_address\">\n        {cellType === CellType.Input && <TransactionCellArrow cell={cell} cellType={cellType} />}\n        <AddressTextWithAlias address={addressText} to={highLight ? `/address/${cell.addressHash}` : undefined} />\n        {cellType === CellType.Output && <TransactionCellArrow cell={cell} cellType={cellType} />}\n      </div>\n      <TransactionCellCapacityPanel>\n        <TransactionCellCapacity cell={cell} cellType={cellType} />\n      </TransactionCellCapacityPanel>\n    </TransactionCellPanel>\n  )\n}\n\nexport default TransactionCell\n","import styled from 'styled-components'\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: space-between;\n  width: 100%;\n\n  .transaction_item__view_all {\n    font-size: 16px;\n    color: ${props => props.theme.primary};\n    margin-top: 20px;\n    height: 20px;\n\n    @media (max-width: 750px) {\n      font-size: 14px;\n      margin-top: 15px;\n      height: 16px;\n    }\n  }\n\n  a {\n    color: ${props => props.theme.primary};\n  }\n\n  a:hover {\n    color: ${props => props.theme.primary};\n  }\n`\n","import { ReactNode } from 'react'\nimport { Link } from 'react-router-dom'\nimport TransactionCellListPanel from './styled'\nimport i18n from '../../../utils/i18n'\n\nconst MAX_CELL_SHOW_SIZE = 10\n\nexport default ({\n  cells,\n  transaction,\n  render,\n}: {\n  cells: State.Cell[]\n  transaction: State.Transaction\n  render: (cell: State.Cell) => ReactNode\n}) => (\n  <TransactionCellListPanel>\n    {cells && cells.map((cell, index) => index < MAX_CELL_SHOW_SIZE && render(cell))}\n    {cells && cells.length >= MAX_CELL_SHOW_SIZE && (\n      <div className=\"transaction_item__view_all\">\n        <Link to={`/transaction/${transaction.transactionHash}`}>{i18n.t('common.view_all')}</Link>\n      </div>\n    )}\n  </TransactionCellListPanel>\n)\n","import styled from 'styled-components'\n\nexport const TransactionIncomePanel = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n\n  @media (max-width: 750px) {\n    justify-content: center;\n  }\n`\n\nexport const TransactionCapacityValuePanel = styled.div`\n  height: 36px;\n  border-radius: 18px;\n  background-color: white;\n  padding: 0 21px;\n  width: 220px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  color: ${(props: { increased: boolean; theme: any }) => (props.increased ? props.theme.primary : '#FF6347')};\n  font-size: 16px;\n\n  @media (max-width: 750px) {\n    font-size: 14px;\n  }\n`\n","import BigNumber from 'bignumber.js'\nimport { TransactionIncomePanel, TransactionCapacityValuePanel } from './styled'\nimport { shannonToCkb } from '../../../utils/util'\nimport { localeNumberString } from '../../../utils/number'\nimport DecimalCapacity from '../../DecimalCapacity'\n\nexport default ({ income }: { income: string }) => {\n  let bigIncome = new BigNumber(income)\n  if (bigIncome.isNaN()) {\n    bigIncome = new BigNumber(0)\n  }\n  return (\n    <TransactionIncomePanel>\n      <TransactionCapacityValuePanel increased={bigIncome.isGreaterThanOrEqualTo(0)}>\n        <DecimalCapacity\n          value={`${bigIncome.isPositive() ? '+' : ''}${localeNumberString(shannonToCkb(bigIncome))}`}\n          color=\"inherit\"\n        />\n      </TransactionCapacityValuePanel>\n    </TransactionIncomePanel>\n  )\n}\n","import { ReactNode, useEffect, useRef } from 'react'\nimport RightArrowIcon from '../../assets/input_arrow_output.png'\nimport DownArrowIcon from '../../assets/input_arrow_output_down.png'\nimport { parseDate } from '../../utils/date'\nimport { localeNumberString } from '../../utils/number'\nimport TransactionCell from './TransactionItemCell'\nimport TransactionCellList from './TransactionItemCellList'\nimport TransactionIncome from './TransactionIncome'\nimport { FullPanel, TransactionHashBlockPanel, TransactionCellPanel, TransactionPanel } from './styled'\nimport i18n from '../../utils/i18n'\nimport { CellType } from '../../constants/common'\nimport AddressText from '../AddressText'\nimport { useIsLGScreen } from '../../utils/hook'\n\nexport interface CircleCorner {\n  top?: boolean\n  bottom?: boolean\n}\n\nconst TransactionItem = ({\n  transaction,\n  address,\n  isBlock = false,\n  titleCard,\n  circleCorner = {\n    top: false,\n    bottom: false,\n  },\n  scrollIntoViewOnMount,\n}: {\n  transaction: State.Transaction\n  address?: string\n  isBlock?: boolean\n  titleCard?: ReactNode | null\n  circleCorner?: CircleCorner\n  scrollIntoViewOnMount?: boolean\n}) => {\n  const isLG = useIsLGScreen()\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const el = ref.current\n    if (el && scrollIntoViewOnMount) {\n      const style = getComputedStyle(ref.current)\n      const navbarHeight = parseInt(style.getPropertyValue('--navbar-height'), 10)\n      const marginTop = parseInt(style.getPropertyValue('margin-top'), 10)\n      const y = el.getBoundingClientRect().top + window.pageYOffset - navbarHeight - marginTop\n      window.scrollTo({ top: y, behavior: 'smooth' })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <TransactionPanel ref={ref} circleCorner={circleCorner}>\n      {titleCard}\n      <TransactionHashBlockPanel>\n        <div className=\"transaction_item__content\">\n          <AddressText\n            disableTooltip\n            className=\"transaction_item__hash\"\n            linkProps={{\n              to: `/transaction/${transaction.transactionHash}`,\n            }}\n          >\n            {transaction.transactionHash}\n          </AddressText>\n          {!isBlock && (\n            <div className=\"transaction_item__block\">\n              {`(${i18n.t('block.block')} ${localeNumberString(transaction.blockNumber)})  ${parseDate(\n                transaction.blockTimestamp,\n              )}`}\n            </div>\n          )}\n        </div>\n      </TransactionHashBlockPanel>\n      <TransactionCellPanel>\n        <div className=\"transaction_item__input\">\n          <TransactionCellList\n            cells={transaction.displayInputs}\n            transaction={transaction}\n            render={cell => <TransactionCell cell={cell} address={address} cellType={CellType.Input} key={cell.id} />}\n          />\n        </div>\n        <img src={isLG ? DownArrowIcon : RightArrowIcon} alt=\"input and output\" />\n        <div className=\"transaction_item__output\">\n          {transaction.displayOutputs && transaction.displayOutputs.length !== 0 ? (\n            <TransactionCellList\n              cells={transaction.displayOutputs}\n              transaction={transaction}\n              render={cell => (\n                <FullPanel key={cell.id}>\n                  <TransactionCell cell={cell} address={address} cellType={CellType.Output} />\n                </FullPanel>\n              )}\n            />\n          ) : (\n            <div className=\"transaction_item__output__empty\">{i18n.t('transaction.empty_output')}</div>\n          )}\n        </div>\n      </TransactionCellPanel>\n      {address && <TransactionIncome income={transaction.income} />}\n    </TransactionPanel>\n  )\n}\n\nexport default TransactionItem\n","import styled from 'styled-components'\nimport { CircleCorner } from '.'\n\nexport const TransactionPanel = styled.div`\n  width: 100%;\n  margin-top: 4px;\n  border-radius: ${(props: { circleCorner: CircleCorner }) =>\n    `${props.circleCorner.top ? '6px 6px' : '0 0'}${props.circleCorner.bottom ? ' 6px 6px' : ' 0 0'}`};\n  box-shadow: 2px 2px 6px 0 #dfdfdf;\n  background-color: #ffffff;\n  padding: 10px 40px 15px 40px;\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n\n  @media (max-width: 750px) {\n    padding: 15px 20px 15px 20px;\n    font-size: 13px;\n  }\n`\n\nexport const TransactionsReward = styled.div`\n  display: flex;\n  align-items: center;\n  height: 35px;\n  justify-content: space-between;\n  .transaction__cell {\n    display: flex;\n    align-items: center;\n    justify-content: left;\n    color: rgb(136, 136, 136);\n  }\n  .transaction__cell__capacity {\n    font-size: 16px;\n    color: rgb(136, 136, 136);\n    margin-left: 15px;\n  }\n`\n\nexport const TransactionHashBlockPanel = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n\n  .transaction_item__content {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-bottom: 10px;\n\n    @media (max-width: 750px) {\n      flex-direction: column;\n      justify-content: normal;\n      margin-bottom: 10px;\n    }\n\n    .transaction_item__hash {\n      font-size: 14px;\n      color: ${props => props.theme.primary};\n      font-weight: 500;\n    }\n\n    .transaction_item__block {\n      color: #000000;\n\n      @media (max-width: 750px) {\n        font-weight: normal;\n      }\n    }\n  }\n\n  &:after {\n    content: '';\n    background: #e2e2e2;\n    height: 1px;\n    width: 100%;\n    display: block;\n    transform: ${() => `scaleY(${Math.ceil((1.0 / window.devicePixelRatio) * 10.0) / 10.0})`};\n  }\n`\n\nexport const TransactionCellPanel = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n\n  @media (max-width: 1200px) {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  > img {\n    margin-top: 16px;\n    width: 16px;\n    height: 16px;\n  }\n\n  .transaction_item__input {\n    margin-right: 40px;\n    flex: 1;\n    min-width: 0;\n\n    @media (max-width: 1200px) {\n      margin: 0px;\n      flex: none;\n      width: 100%;\n    }\n  }\n\n  .transaction_item__output {\n    flex: 1;\n    min-width: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margin-left: 40px;\n\n    @media (max-width: 1200px) {\n      margin: 0px;\n      flex: none;\n      width: 100%;\n    }\n  }\n\n  .transaction_item__output__empty {\n    font-size: 16px;\n    color: #666666;\n    margin-top: 18px;\n\n    @media (max-width: 750px) {\n      font-size: 13px;\n    }\n  }\n`\n\nexport const FullPanel = styled.div`\n  width: 100%;\n`\n"],"names":["PaginationPanel","styled","PaginationLeftItem","props","isFirstPage","isLastPage","PaginationRightItem","currentPage","totalPages","gotoPage","onChange","className","annotation","isMobile","useIsMobile","useState","inputPage","setInputPage","total","Math","max","current","min","mobilePagination","i18n","pcPagination","annotationComp","placement","title","src","HelpIcon","alt","changePage","page","SimpleButton","onClick","type","pattern","value","event","pageNo","parseInt","target","Number","isNaN","onKeyUp","keyCode","TransactionCellPanel","highLight","theme","primary","TransactionCellCapacityPanel","TransactionCellWithdraw","TransactionCellUDTPanel","WithdrawInfoPanel","WithdrawItemPanel","width","isDaoDepositCell","cellType","isDaoWithdrawCell","AddressTextWithAlias","address","to","alias","useDASAccount","useBoolean","truncated","truncatedCtl","content","trigger","CopyTooltipText","EllipsisMiddle","classNames","styles","onTruncateStateChange","toggle","WithdrawPopoverItem","WithdrawPopoverInfo","cell","useAppState","app","language","DecimalCapacity","localeNumberString","shannonToCkb","capacity","fontSize","interest","compensationStartedBlockNumber","compensationEndedBlockNumber","parseDiffDate","compensationStartedTimestamp","compensationEndedTimestamp","lockedUntilBlockNumber","lockedUntilBlockTimestamp","TransactionCellNervosDao","CellType","NervosDAOWithdrawingIcon","NervosDAOCellIcon","arrowPointAtCenter","overlayStyle","TransactionCellUDT","udt","udtInfo","published","parseUDTAmount","amount","decimal","uan","symbol","typeHash","substring","length","shannonToCkbDecimal","UDTTokenIcon","TransactionCellCapacity","isDaoCell","fromCellbase","Cellbase","addressText","addressHash","TransactionCellArrow","undefined","cells","transaction","render","map","index","transactionHash","TransactionIncomePanel","TransactionCapacityValuePanel","increased","income","bigIncome","BigNumber","isGreaterThanOrEqualTo","isPositive","color","isBlock","titleCard","circleCorner","top","bottom","scrollIntoViewOnMount","isLG","useIsLGScreen","ref","useRef","useEffect","el","style","getComputedStyle","navbarHeight","getPropertyValue","marginTop","y","getBoundingClientRect","window","pageYOffset","scrollTo","behavior","AddressText","disableTooltip","linkProps","blockNumber","parseDate","blockTimestamp","displayInputs","id","displayOutputs","TransactionIncome","TransactionPanel","TransactionHashBlockPanel","ceil","devicePixelRatio","FullPanel"],"sourceRoot":""}