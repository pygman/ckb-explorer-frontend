{"version":3,"file":"static/js/5820.eae0b273.chunk.js","mappings":"4MAEaA,EAAmBC,EAAAA,GAAAA,IAAU,gQ,uDCI1C,aAAe,OACb,UAACD,EAAgB,YACf,SAAC,IAAS,KACV,SAACE,EAAA,EAAc,KACf,SAACC,EAAA,EAAY,KACb,SAACC,EAAA,EAAU,CAACC,UAAQ,EAACC,YAAa,WAAO,MAE5C,ECRKC,EAAeN,EAAAA,GAAAA,IAAU,wIAO/B,WAAe,GAAgE,IAA7DO,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAEVC,GACZC,EAAAA,EAAAA,MADFC,WAAcF,kBAEhB,OAAO,SAACH,EAAY,CAACE,MAAOA,EAAM,SAAEC,GAAoB,SAACG,EAAU,IAAML,GAC1E,C,yQChBD,EAAiC,6B,WCU3BM,EAAgBb,EAAAA,GAAAA,IAAU,uEAK1Bc,EAAgBd,EAAAA,GAAAA,IAAU,+KAY1Be,EAAc,SAACC,GACnB,OAAIC,EAAAA,EAAAA,MACKD,E,qsWAA4BE,EAE9BF,E,ikWAAgCG,CACzC,EAEA,WAAe,GAA+F,IAA5FC,EAAY,EAAZA,aAAcC,EAAgB,EAAhBA,iBACxBL,GAAWM,EAAAA,EAAAA,MACjB,GAAYC,EAAAA,EAAAA,KAALC,GAAqB,YAApB,GAGR,OACE,SAACC,EAAA,EAAO,WACN,UAACZ,EAAa,CAACa,UAAU,YAAW,WAClC,SAACZ,EAAa,CAACa,IAAKZ,EAAYC,GAAWY,IAAI,SAE7CR,GAAgBC,KAChB,iCACE,gBAAKK,UAAWG,EAAsB,SAAEL,EAAE,6BACzC,SAWZ,C","sources":["components/Header/MobileMenu/styled.tsx","components/Header/MobileMenu/index.tsx","components/Content/index.tsx","webpack://ckb-explorer-fronted/./src/pages/404/index.module.scss?e9dd","pages/404/index.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const MobileMenusPanel = styled.div`\n  width: 100%;\n  background: #1c1c1c;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  position: -webkit-fixed;\n  z-index: 2;\n  color: white;\n  top: var(--navbar-height);\n  bottom: 0px;\n  overflow: hidden;\n`\n","import { MobileMenusPanel } from './styled'\nimport MenuItems from '../MenusComp'\nimport { SearchComp } from '../SearchComp'\nimport LanguageComp from '../LanguageComp'\nimport BlockchainComp from '../BlockchainComp'\n\nexport default () => (\n  <MobileMenusPanel>\n    <MenuItems />\n    <BlockchainComp />\n    <LanguageComp />\n    <SearchComp expanded setExpanded={() => {}} />\n  </MobileMenusPanel>\n)\n","import { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { useAppState } from '../../contexts/providers'\nimport MobileMenu from '../Header/MobileMenu'\n\nconst ContentPanel = styled.div`\n  width: 100%;\n  overflow-x: hidden;\n  flex: 1;\n  margin-top: var(--navbar-height);\n  background: #ededed;\n`\nexport default ({ children, style }: { children: ReactNode; style?: any }) => {\n  const {\n    components: { mobileMenuVisible },\n  } = useAppState()\n  return <ContentPanel style={style}>{mobileMenuVisible ? <MobileMenu /> : children}</ContentPanel>\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"pageCrashedTip\":\"_404_pageCrashedTip__4b0rB\",\"pageCrashedError\":\"_404_pageCrashedError__gHVNQ\"};","import styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport Content from '../../components/Content'\nimport PC404mage from '../../assets/pc_404.png'\nimport Mobile404Image from '../../assets/mobile_404.png'\nimport PCBlue404Image from '../../assets/blue_pc_404.png'\nimport MobileBlue404Image from '../../assets/blue_mobile_404.png'\nimport { useIsMobile } from '../../utils/hook'\nimport { isMainnet } from '../../utils/chain'\nimport styles from './index.module.scss'\n\nconst NotFoundPanel = styled.div`\n  margin-top: 120px;\n  margin-bottom: 140px;\n`\n\nconst NotFoundImage = styled.img`\n  width: 1038px;\n  height: 480px;\n  margin: 0 auto;\n  display: block;\n\n  @media (max-width: 750px) {\n    width: 282px;\n    height: 130px;\n  }\n`\n\nconst get404Image = (isMobile: boolean) => {\n  if (isMainnet()) {\n    return isMobile ? Mobile404Image : PC404mage\n  }\n  return isMobile ? MobileBlue404Image : PCBlue404Image\n}\n\nexport default ({ errorMessage, errorDescription }: { errorMessage?: string; errorDescription?: string }) => {\n  const isMobile = useIsMobile()\n  const [t] = useTranslation()\n  const isProduction = process.env.NODE_ENV === 'production'\n\n  return (\n    <Content>\n      <NotFoundPanel className=\"container\">\n        <NotFoundImage src={get404Image(isMobile)} alt=\"404\" />\n\n        {(errorMessage || errorDescription) && (\n          <>\n            <div className={styles.pageCrashedTip}>{t('error.page_crashed_tip')}</div>\n            {!isProduction && (\n              <pre className={styles.pageCrashedError}>\n                {errorMessage}\n                {errorDescription}\n              </pre>\n            )}\n          </>\n        )}\n      </NotFoundPanel>\n    </Content>\n  )\n}\n"],"names":["MobileMenusPanel","styled","BlockchainComp","LanguageComp","SearchComp","expanded","setExpanded","ContentPanel","children","style","mobileMenuVisible","useAppState","components","MobileMenu","NotFoundPanel","NotFoundImage","get404Image","isMobile","isMainnet","PC404mage","PCBlue404Image","errorMessage","errorDescription","useIsMobile","useTranslation","t","Content","className","src","alt","styles"],"sourceRoot":""}