{"version":3,"file":"static/js/6944.61d6ad49.chunk.js","mappings":"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","sources":["pages/StatisticsChart/common/styled.tsx","pages/StatisticsChart/common/index.tsx","pages/StatisticsChart/mining/DifficultyHashRate.tsx","utils/chart.ts","utils/number.ts"],"sourcesContent":["import styled from 'styled-components'\n\nexport const ChartDetailPanel = styled.div`\n  margin-bottom: 30px;\n  background: white;\n`\n\nexport const ChartDetailTitle = styled.div`\n  background: white;\n  margin-top: 30px;\n  padding: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 750px) {\n    margin-top: 20px;\n  }\n\n  .chart__detail__title__panel {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n\n    > span {\n      color: #000000;\n      text-align: center;\n      font-size: 24px;\n      margin-left: 100px;\n\n      @media (max-width: 750px) {\n        font-size: 16px;\n        margin-left: 0px;\n      }\n    }\n\n    > img {\n      width: 18px;\n      height: 18px;\n      margin-left: 10px;\n    }\n  }\n\n  .chart__detail__title__download {\n    width: 100px;\n    padding: 5px 0;\n    border-radius: 2px;\n    border: solid 1px #666666;\n    font-size: 12px;\n    text-align: center;\n    color: #666666;\n    margin-right: 3.6%;\n\n    @media (max-width: 750px) {\n      display: none;\n    }\n  }\n`\n\nexport const LoadingPanel = styled.div`\n  display: flex;\n  width: 100%;\n  height: ${(props: { isThumbnail?: boolean }) => (props.isThumbnail ? '200px' : '70vh')};\n  align-items: center;\n  justify-content: center;\n`\n\nexport const ChartNoDataPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: ${(props: { isThumbnail?: boolean }) => (props.isThumbnail ? '92px' : '184px')};\n  height: ${(props: { isThumbnail?: boolean }) => (props.isThumbnail ? '56px' : '112px')};\n  border-radius: 6px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.12);\n  border: solid 0.5px ${props => props.theme.primary};\n  background-color: #ffffff;\n\n  > img {\n    width: ${(props: { isThumbnail?: boolean }) => (props.isThumbnail ? '18.5px' : '37px')};\n    height: ${(props: { isThumbnail?: boolean }) => (props.isThumbnail ? '14px' : '28px')};\n  }\n\n  > span {\n    font-size: 12px;\n    font-weight: 500;\n    margin-top: 5px;\n    color: ${props => props.theme.primary};\n  }\n`\n\nexport const ChartNotePanel = styled.div`\n  font-size: 12px;\n  with: 100%;\n  color: rgba(0, 0, 0, 0.6);\n  padding: 6px 3%;\n  text-align: left;\n`\n","import { ComponentProps, CSSProperties, ReactElement, ReactNode, useEffect, useMemo, useRef } from 'react'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/chart/bar'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/chart/map'\nimport 'echarts/lib/chart/scatter'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/markLine'\nimport 'echarts/lib/component/dataZoom'\nimport 'echarts/lib/component/brush'\nimport echarts from 'echarts/lib/echarts'\nimport { Tooltip } from 'antd'\nimport { EChartOption, ECharts } from 'echarts'\nimport { LoadingPanel, ChartNoDataPanel, ChartDetailTitle, ChartDetailPanel, ChartNotePanel } from './styled'\nimport Loading from '../../../components/Loading'\nimport ChartNoDataImage from '../../../assets/chart_no_data.png'\nimport ChartNoDataAggronImage from '../../../assets/chart_no_data_aggron.png'\nimport HelpIcon from '../../../assets/qa_help.png'\nimport { isMainnet } from '../../../utils/chain'\nimport SmallLoading from '../../../components/Loading/SmallLoading'\nimport i18n from '../../../utils/i18n'\nimport Content from '../../../components/Content'\nimport { useChartQueryWithCache, useIsMobile, usePrevious, useWindowResize } from '../../../utils/hook'\nimport { useAppState } from '../../../contexts/providers'\nimport { isDeepEqual } from '../../../utils/util'\n\nconst LoadingComp = ({ isThumbnail }: { isThumbnail?: boolean }) => (isThumbnail ? <SmallLoading /> : <Loading show />)\n\nconst ChartLoading = ({ show, isThumbnail = false }: { show: boolean; isThumbnail?: boolean }) => (\n  <LoadingPanel isThumbnail={isThumbnail}>\n    {show ? (\n      <LoadingComp isThumbnail={isThumbnail} />\n    ) : (\n      <ChartNoDataPanel isThumbnail={isThumbnail}>\n        <img alt=\"no data\" src={isMainnet() ? ChartNoDataImage : ChartNoDataAggronImage} />\n        <span>{i18n.t('statistic.no_data')}</span>\n      </ChartNoDataPanel>\n    )}\n  </LoadingPanel>\n)\n\nconst ReactChartCore = ({\n  option,\n  isThumbnail,\n  clickEvent,\n  notMerge = false,\n  lazyUpdate = false,\n  style,\n  className = '',\n}: {\n  option: EChartOption\n  isThumbnail?: boolean\n  clickEvent?: any\n  notMerge?: boolean\n  lazyUpdate?: boolean\n  style?: CSSProperties\n  className?: string\n}) => {\n  const chartRef = useRef<HTMLDivElement>(null)\n  const chartInstanceRef = useRef<ECharts | null>(null)\n  const prevOption = usePrevious(option)\n  const prevClickEvent = usePrevious(clickEvent)\n\n  useEffect(() => {\n    let chartInstance: ECharts | null = null\n    if (chartRef.current) {\n      if (!chartInstanceRef.current) {\n        const renderedInstance = echarts.getInstanceByDom(chartRef.current)\n        if (renderedInstance) {\n          renderedInstance.dispose()\n        }\n        chartInstanceRef.current = echarts.init(chartRef.current)\n      }\n      chartInstance = chartInstanceRef.current\n      try {\n        if (!isDeepEqual(prevOption, option, ['formatter'])) {\n          chartInstance.setOption(option, { notMerge, lazyUpdate })\n        }\n        if (clickEvent && typeof clickEvent === 'function' && clickEvent !== prevClickEvent) {\n          chartInstance.on('click', clickEvent)\n        }\n      } catch (error) {\n        console.error('error', error)\n        if (chartInstance) {\n          chartInstance.dispose()\n        }\n      }\n    }\n  }, [clickEvent, lazyUpdate, notMerge, option, prevClickEvent, prevOption])\n\n  useWindowResize(() => {\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current?.resize()\n    }\n  })\n\n  return <div style={{ height: isThumbnail ? '200px' : '70vh', ...style }} className={className} ref={chartRef} />\n}\n\nconst dataToCsv = (data: any[] | undefined) => {\n  if (!data || data.length === 0) {\n    return undefined\n  }\n  let csv = ''\n  data.forEach(row => {\n    csv += row.join(',')\n    csv += '\\n'\n  })\n  return csv\n}\n\nconst ChartPage = ({\n  title,\n  children,\n  description,\n  data,\n}: {\n  title: string\n  children: ReactNode\n  description?: string\n  data?: (string | number)[][]\n}) => {\n  const csv = dataToCsv(data)\n  const fileName = (title.indexOf(' (') > 0 ? title.substring(0, title.indexOf(' (')) : title)\n    .replace(/&/g, '')\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n  return (\n    <Content>\n      <ChartDetailTitle className=\"container\">\n        <div className=\"chart__detail__title__panel\">\n          <span>{title}</span>\n          {description && (\n            <Tooltip placement=\"bottom\" title={description}>\n              <img src={HelpIcon} alt=\"chart help\" />\n            </Tooltip>\n          )}\n        </div>\n        {csv && (\n          <a\n            className=\"chart__detail__title__download\"\n            rel=\"noopener noreferrer\"\n            href={`data:text/csv;charset=utf-8,${encodeURI(csv)}`}\n            target=\"_blank\"\n            download={`${fileName}.csv`}\n          >\n            {i18n.t('statistic.download_data')}\n          </a>\n        )}\n      </ChartDetailTitle>\n      <ChartDetailPanel className=\"container\">{children}</ChartDetailPanel>\n    </Content>\n  )\n}\n\nexport interface SmartChartPageProps<T> {\n  title: string\n  description?: string\n  note?: string\n  isThumbnail?: boolean\n  chartProps?: Partial<ComponentProps<typeof ReactChartCore>>\n  fetchData: () => Promise<T[] | Response.Response<Response.Wrapper<T>[]>>\n  onFetched?: (dataList: T[]) => void\n  getEChartOption: (\n    dataList: T[],\n    chartColor: State.App['chartColor'],\n    isMobile: boolean,\n    isThumbnail: boolean,\n  ) => echarts.EChartOption\n  toCSV: (dataList: T[]) => (string | number)[][]\n  cacheKey?: string\n  cacheMode?: 'forever' | 'date' | 'epoch'\n}\n\nexport function SmartChartPage<T>({\n  title,\n  description,\n  note,\n  isThumbnail = false,\n  chartProps,\n  fetchData,\n  onFetched,\n  getEChartOption,\n  toCSV,\n  cacheKey,\n  cacheMode = 'forever',\n}: SmartChartPageProps<T>): ReactElement {\n  const isMobile = useIsMobile()\n  const { app } = useAppState()\n\n  const query = useChartQueryWithCache(fetchData, cacheKey, cacheMode)\n  const dataList = useMemo(() => query.data ?? [], [query.data])\n  useEffect(() => {\n    if (onFetched && query.data) {\n      onFetched(query.data)\n    }\n  }, [onFetched, query.data])\n\n  const option = useMemo(\n    () => getEChartOption(dataList, app.chartColor, isMobile, isThumbnail),\n    [app.chartColor, dataList, getEChartOption, isMobile, isThumbnail],\n  )\n\n  const content = query.isLoading ? (\n    <ChartLoading show isThumbnail={isThumbnail} />\n  ) : (\n    <ReactChartCore option={option} isThumbnail={isThumbnail} {...chartProps} />\n  )\n\n  return isThumbnail ? (\n    content\n  ) : (\n    <ChartPage title={title} description={description} data={toCSV(dataList)}>\n      {content}\n      {note != null && <ChartNotePanel>{note}</ChartNotePanel>}\n    </ChartPage>\n  )\n}\n\nconst tooltipColor = (color: string) =>\n  `<span style=\"display:inline-block;margin-right:8px;margin-left:5px;margin-bottom:2px;border-radius:10px;width:6px;height:6px;background-color:${color}\"></span>`\n\nconst tooltipWidth = (value: string, width: number) =>\n  `<span style=\"width:${width}px;display:inline-block;\">${value}:</span>`\n\nexport type SeriesItem = { seriesName: string; name: string; color: string; dataIndex: number }\n\nexport { ChartLoading, ReactChartCore, ChartPage, tooltipColor, tooltipWidth }\n","import BigNumber from 'bignumber.js'\nimport { useTranslation } from 'react-i18next'\nimport i18n, { currentLanguage } from '../../../utils/i18n'\nimport { DATA_ZOOM_CONFIG, handleAxis } from '../../../utils/chart'\nimport { handleDifficulty, handleHashRate } from '../../../utils/number'\nimport { tooltipColor, tooltipWidth, SeriesItem, SmartChartPage } from '../common'\nimport { fetchStatisticDifficultyHashRate } from '../../../service/http/fetcher'\nimport { ChartCachedKeys } from '../../../constants/cache'\n\nconst getOption = (\n  statisticDifficultyHashRates: State.StatisticDifficultyHashRate[],\n  chartColor: State.App['chartColor'],\n  isMobile: boolean,\n  isThumbnail = false,\n): echarts.EChartOption => {\n  const gridThumbnail = {\n    left: '4%',\n    right: '4%',\n    top: '8%',\n    bottom: '6%',\n    containLabel: true,\n  }\n  const grid = () => ({\n    left: '3%',\n    right: '3%',\n    top: '8%',\n    bottom: '5%',\n    containLabel: true,\n  })\n\n  const widthSpan = (value: string) => tooltipWidth(value, currentLanguage() === 'en' ? 70 : 50)\n\n  const parseTooltip = ({ seriesName, data, color }: SeriesItem & { data: string }): string => {\n    if (seriesName === i18n.t('block.uncle_rate')) {\n      return `<div>${tooltipColor(color)}${widthSpan(i18n.t('block.uncle_rate'))} ${data}%</div>`\n    }\n    if (seriesName === i18n.t('block.difficulty')) {\n      return `<div>${tooltipColor(color)}${widthSpan(i18n.t('block.difficulty'))} ${handleDifficulty(data)}</div>`\n    }\n    if (seriesName.startsWith(i18n.t('block.hash_rate'))) {\n      return `<div>${tooltipColor(color)}${widthSpan(i18n.t('block.hash_rate'))} ${handleHashRate(data)}</div>`\n    }\n    return ''\n  }\n  return {\n    color: chartColor.moreColors,\n    tooltip: !isThumbnail\n      ? {\n          trigger: 'axis',\n          formatter: (dataList: any): string => {\n            const list = dataList as Array<SeriesItem & { data: string }>\n            let result = `<div>${tooltipColor('#333333')}${widthSpan(i18n.t('block.epoch'))} ${list[0].name}</div>`\n            list.forEach(data => {\n              result += parseTooltip(data)\n            })\n            return result\n          },\n        }\n      : undefined,\n    legend: !isThumbnail\n      ? {\n          data: [\n            {\n              name: i18n.t('block.difficulty'),\n            },\n            {\n              name: i18n.t('block.hash_rate_hps'),\n            },\n            {\n              name: i18n.t('block.uncle_rate'),\n            },\n          ],\n        }\n      : undefined,\n    grid: isThumbnail ? gridThumbnail : grid(),\n    dataZoom: isThumbnail ? [] : DATA_ZOOM_CONFIG,\n    xAxis: [\n      {\n        name: isMobile || isThumbnail ? '' : i18n.t('block.epoch'),\n        nameLocation: 'middle',\n        nameGap: 30,\n        type: 'category',\n        boundaryGap: false,\n        data: statisticDifficultyHashRates.map(data => data.epochNumber),\n        axisLabel: {\n          formatter: (value: string) => value,\n        },\n      },\n    ],\n    yAxis: [\n      {\n        position: 'left',\n        name: isMobile || isThumbnail ? '' : i18n.t('block.difficulty'),\n        type: 'value',\n        scale: true,\n        axisLine: {\n          lineStyle: {\n            color: chartColor.moreColors[0],\n          },\n        },\n        axisLabel: {\n          formatter: (value: string) => handleAxis(new BigNumber(value)),\n        },\n      },\n      {\n        position: 'right',\n        name: isMobile || isThumbnail ? '' : i18n.t('block.hash_rate_hps'),\n        type: 'value',\n        splitLine: {\n          show: false,\n        },\n        axisLine: {\n          lineStyle: {\n            color: chartColor.moreColors[1],\n          },\n        },\n        scale: true,\n        axisLabel: {\n          formatter: (value: string) => handleAxis(new BigNumber(value)),\n        },\n      },\n      {\n        position: 'right',\n        type: 'value',\n        max: 100,\n        show: false,\n        axisLabel: {\n          formatter: () => '',\n        },\n      },\n    ],\n    series: [\n      {\n        name: i18n.t('block.difficulty'),\n        type: 'line',\n        yAxisIndex: 0,\n        symbol: isThumbnail ? 'none' : 'circle',\n        symbolSize: 3,\n        data: statisticDifficultyHashRates.map(data => new BigNumber(data.difficulty).toNumber()),\n      },\n      {\n        name: i18n.t('block.hash_rate_hps'),\n        type: 'line',\n        yAxisIndex: 1,\n        symbol: isThumbnail ? 'none' : 'circle',\n        symbolSize: 3,\n        data: statisticDifficultyHashRates.map(data => new BigNumber(data.hashRate).toNumber()),\n      },\n      {\n        name: i18n.t('block.uncle_rate'),\n        type: 'line',\n        smooth: true,\n        yAxisIndex: 2,\n        symbol: isThumbnail ? 'none' : 'circle',\n        symbolSize: 3,\n        z: 0,\n        markLine: isThumbnail\n          ? undefined\n          : {\n              symbol: 'none',\n              data: [\n                {\n                  name: i18n.t('block.uncle_rate_target'),\n                  yAxis: 2.5,\n                },\n              ],\n              label: {\n                formatter: (params: any) => `${params.value}%`,\n              },\n            },\n        data: statisticDifficultyHashRates.map(data => (Number(data.uncleRate) * 100).toFixed(2)),\n      },\n    ],\n  }\n}\n\nconst toCSV = (statisticDifficultyHashRates: State.StatisticDifficultyHashRate[]) =>\n  statisticDifficultyHashRates\n    ? statisticDifficultyHashRates.map(data => [data.epochNumber, data.difficulty, data.hashRate, data.uncleRate])\n    : []\n\nexport const DifficultyHashRateChart = ({ isThumbnail = false }: { isThumbnail?: boolean }) => {\n  const [t] = useTranslation()\n  return (\n    <SmartChartPage\n      title={`${t('block.difficulty')} & ${t('block.hash_rate')} & ${t('block.uncle_rate')}`}\n      isThumbnail={isThumbnail}\n      fetchData={fetchStatisticDifficultyHashRate}\n      getEChartOption={getOption}\n      toCSV={toCSV}\n      cacheKey={ChartCachedKeys.DifficultyHashRate}\n      cacheMode=\"epoch\"\n    />\n  )\n}\n\nexport default DifficultyHashRateChart\n","import BigNumber from 'bignumber.js'\n\nexport const DATA_ZOOM_CONFIG = [\n  {\n    show: true,\n    realtime: true,\n    start: 0,\n    end: 100,\n    xAxisIndex: [0],\n  },\n  {\n    type: 'inside',\n    realtime: true,\n    start: 0,\n    end: 100,\n    xAxisIndex: [0],\n  },\n]\n\nexport const handleAxis = (value: BigNumber | string | number, decimal?: number, hideZero?: boolean) => {\n  const bigValue = typeof value === 'string' || typeof value === 'number' ? new BigNumber(value) : value\n  if (bigValue.isNaN() || bigValue.isZero()) return '0'\n  const kv = bigValue.dividedBy(1000)\n  const mv = kv.dividedBy(1000)\n  const gv = mv.dividedBy(1000)\n  const tv = gv.dividedBy(1000)\n  const pv = tv.dividedBy(1000)\n  const ev = pv.dividedBy(1000)\n  const zv = ev.dividedBy(1000)\n  const yv = zv.dividedBy(1000)\n\n  if (yv.isGreaterThanOrEqualTo(1)) {\n    return `${decimal !== undefined ? yv.toFixed(decimal) : yv.toFixed()}Y`\n  }\n  if (zv.isGreaterThanOrEqualTo(1)) {\n    return `${decimal !== undefined ? zv.toFixed(decimal) : zv.toFixed()}Z`\n  }\n  if (ev.isGreaterThanOrEqualTo(1)) {\n    return `${decimal !== undefined ? ev.toFixed(decimal) : ev.toFixed()}E`\n  }\n  if (pv.isGreaterThanOrEqualTo(1)) {\n    return `${decimal !== undefined ? pv.toFixed(decimal) : pv.toFixed()}P`\n  }\n  if (tv.isGreaterThanOrEqualTo(1)) {\n    return `${decimal !== undefined ? tv.toFixed(decimal) : tv.toFixed()}T`\n  }\n  if (gv.isGreaterThanOrEqualTo(1)) {\n    return `${decimal !== undefined ? gv.toFixed(decimal) : gv.toFixed()}G`\n  }\n  if (mv.isGreaterThanOrEqualTo(1)) {\n    return `${decimal !== undefined ? mv.toFixed(decimal) : mv.toFixed()}M`\n  }\n  if (kv.isGreaterThanOrEqualTo(1)) {\n    return `${decimal !== undefined ? kv.toFixed(decimal) : kv.toFixed()}K`\n  }\n  return `${decimal && !hideZero ? bigValue.toFixed(decimal) : bigValue.toFixed()}`\n}\n\nexport const handleLogGroupAxis = (value: BigNumber | string | number, suffix?: string) => {\n  const bigValue = typeof value === 'string' || typeof value === 'number' ? new BigNumber(value) : value\n  return `[${bigValue.isGreaterThanOrEqualTo(1000) ? handleAxis(bigValue.dividedBy(10), 0) : '0'}, ${handleAxis(\n    value,\n    0,\n  )}${suffix || ''}]`\n}\n\nexport const handleStepGroupAxis = (value: BigNumber | string | number, step?: number, suffix?: string) => {\n  const bigValue = typeof value === 'string' || typeof value === 'number' ? new BigNumber(value) : value\n  return `[${bigValue.minus(step || 100)}, ${value}${suffix || ''}]`\n}\n\nexport const parseInterval = (max: number, min: number) => {\n  const count = 20\n  const interval = (max - min) / count\n  const { length } = Math.ceil(interval).toString()\n  const factor = 10 ** (length > 2 ? length - 2 : 0)\n  return (Math.ceil(interval / factor) + 1) * factor\n}\n","import BigNumber from 'bignumber.js'\n\nexport const localeNumberString = (value: BigNumber | string | number): string => {\n  if (!value) return '0'\n  const origin = typeof value === 'string' || typeof value === 'number' ? new BigNumber(value) : value\n  const bigValue = origin.abs()\n  if (bigValue.isNaN()) {\n    return '0'\n  }\n  if (bigValue.isLessThan(1) && bigValue.abs().isGreaterThan(0)) {\n    return `${value}`\n  }\n  let text = bigValue.toString(10)\n  const pointIndex = text.indexOf('.')\n  let offset = pointIndex === -1 ? text.length : pointIndex\n  while (offset > 3) {\n    text = text\n      .slice(0, offset - 3)\n      .concat(',')\n      .concat(text.slice(offset - 3))\n    offset -= 3\n  }\n  return origin.isNegative() ? `-${text}` : text\n}\n\nconst MIN_VALUE = new BigNumber(1)\nexport const handleDifficulty = (value: BigNumber | string | number) => {\n  if (!value) return '0'\n  const bigValue = typeof value === 'string' || typeof value === 'number' ? new BigNumber(value) : value\n  const kv = bigValue.dividedBy(1000)\n  const mv = kv.dividedBy(1000)\n  const gv = mv.dividedBy(1000)\n  const tv = gv.dividedBy(1000)\n  const pv = tv.dividedBy(1000)\n  const ev = pv.dividedBy(1000)\n  const zv = ev.dividedBy(1000)\n  const yv = zv.dividedBy(1000)\n\n  if (yv.isGreaterThanOrEqualTo(MIN_VALUE)) {\n    return `${localeNumberString(yv.toFixed(2))} YH`\n  }\n  if (zv.isGreaterThanOrEqualTo(MIN_VALUE)) {\n    return `${localeNumberString(zv.toFixed(2))} ZH`\n  }\n  if (ev.isGreaterThanOrEqualTo(MIN_VALUE)) {\n    return `${localeNumberString(ev.toFixed(2))} EH`\n  }\n  if (pv.isGreaterThanOrEqualTo(MIN_VALUE)) {\n    return `${localeNumberString(pv.toFixed(2))} PH`\n  }\n  if (tv.isGreaterThanOrEqualTo(MIN_VALUE)) {\n    return `${localeNumberString(tv.toFixed(2))} TH`\n  }\n  if (gv.isGreaterThanOrEqualTo(MIN_VALUE)) {\n    return `${localeNumberString(gv.toFixed(2))} GH`\n  }\n  if (mv.isGreaterThanOrEqualTo(MIN_VALUE)) {\n    return `${localeNumberString(mv.toFixed(2))} MH`\n  }\n  if (kv.isGreaterThanOrEqualTo(MIN_VALUE)) {\n    return `${localeNumberString(kv.toFixed(2))} KH`\n  }\n  return `${localeNumberString(bigValue.toFixed(2))} H`\n}\n\nexport const handleHashRate = (value: BigNumber | string | number) => {\n  return `${handleDifficulty(value)}/s`\n}\n\nexport const parseUDTAmount = (amount: string, decimal: string) => {\n  try {\n    const decimalInt = parseInt(decimal, 10)\n    const amountBigInt = new BigNumber(amount)\n    const result = amountBigInt.dividedBy(new BigNumber(10).pow(decimalInt))\n    if (decimalInt > 20) {\n      return `${result.toFixed(20)}...`\n    }\n    if (result.toString().length >= 16 || result.lt(new BigNumber(0.000001))) {\n      return localeNumberString(result.toFixed(decimalInt))\n    }\n    return localeNumberString(result.toNumber())\n  } catch (error) {\n    console.error(error)\n    return '0'\n  }\n}\n"],"names":["ChartDetailPanel","styled","ChartDetailTitle","LoadingPanel","props","isThumbnail","ChartNoDataPanel","theme","primary","ChartNotePanel","LoadingComp","SmallLoading","Loading","show","ChartLoading","alt","src","isMainnet","i18n","ReactChartCore","option","clickEvent","notMerge","lazyUpdate","style","className","chartRef","useRef","chartInstanceRef","prevOption","usePrevious","prevClickEvent","useEffect","chartInstance","current","renderedInstance","echarts","dispose","isDeepEqual","setOption","on","error","console","useWindowResize","resize","height","ref","ChartPage","title","children","description","csv","data","length","forEach","row","join","dataToCsv","fileName","indexOf","substring","replace","toLowerCase","Content","placement","HelpIcon","rel","href","encodeURI","target","download","SmartChartPage","note","chartProps","fetchData","onFetched","getEChartOption","toCSV","cacheKey","cacheMode","isMobile","useIsMobile","app","useAppState","query","useChartQueryWithCache","dataList","useMemo","chartColor","content","isLoading","tooltipColor","color","tooltipWidth","value","width","getOption","statisticDifficultyHashRates","gridThumbnail","left","right","top","bottom","containLabel","grid","widthSpan","currentLanguage","parseTooltip","seriesName","handleDifficulty","startsWith","handleHashRate","moreColors","tooltip","undefined","trigger","formatter","list","result","name","legend","dataZoom","DATA_ZOOM_CONFIG","xAxis","nameLocation","nameGap","type","boundaryGap","map","epochNumber","axisLabel","yAxis","position","scale","axisLine","lineStyle","handleAxis","BigNumber","splitLine","max","series","yAxisIndex","symbol","symbolSize","difficulty","toNumber","hashRate","smooth","z","markLine","label","params","Number","uncleRate","toFixed","DifficultyHashRateChart","useTranslation","t","fetchStatisticDifficultyHashRate","ChartCachedKeys","realtime","start","end","xAxisIndex","decimal","hideZero","bigValue","isNaN","isZero","kv","dividedBy","mv","gv","tv","pv","ev","zv","yv","isGreaterThanOrEqualTo","handleLogGroupAxis","suffix","localeNumberString","origin","abs","isLessThan","isGreaterThan","text","toString","pointIndex","offset","slice","concat","isNegative","MIN_VALUE","parseUDTAmount","amount","decimalInt","parseInt","pow","lt"],"sourceRoot":""}