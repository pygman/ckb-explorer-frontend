{"version":3,"file":"static/js/1139.a1e463ea.chunk.js","mappings":"4MAEaA,EAAmBC,EAAAA,GAAAA,IAAU,gQ,uDCI1C,aAAe,OACb,UAACD,EAAgB,YACf,SAAC,IAAS,KACV,SAACE,EAAA,EAAc,KACf,SAACC,EAAA,EAAY,KACb,SAACC,EAAA,EAAU,CAACC,UAAQ,EAACC,YAAa,WAAO,MAE5C,ECRKC,EAAeN,EAAAA,GAAAA,IAAU,wIAO/B,WAAe,GAAgE,IAA7DO,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAEVC,GACZC,EAAAA,EAAAA,MADFC,WAAcF,kBAEhB,OAAO,SAACH,EAAY,CAACE,MAAOA,EAAM,SAAEC,GAAoB,SAACG,EAAU,IAAML,GAC1E,C,0JCfYM,EAAcb,EAAAA,GAAAA,IAAU,sSAmBxBc,EAAgBd,EAAAA,GAAAA,IAAU,woBAc1B,SAAAe,GAAK,OAAIA,EAAMC,MAAMC,OAAO,IAK5B,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,OAAO,I,sBC1BnCC,GAAYC,EAAAA,EAAAA,MAAcC,EAAAA,GAAcC,EAAAA,GAE9C,WAAe,GAAwC,IAArCC,EAAO,EAAPA,QACVC,GAASC,EAAAA,EAAAA,IAAgB,IAAK,QAC5BC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,KACLC,EAAQL,GAAWG,EAEzB,OACE,SAACG,EAAA,EAAO,WACN,UAACf,EAAW,CAACgB,UAAU,YAAW,WAChC,gBAAKA,UAAU,oBAAmB,UAChC,SAACC,EAAA,EAAM,CAACC,QAASJ,EAAiBK,WAAS,OAE7C,SAAClB,EAAa,UACXY,IAASO,EAAAA,EAAAA,aAA8BX,GACtC,4BACE,2BArBZH,EAAAA,EAAAA,MAAce,EAAAA,GAAAA,EAAO,qCAAuCA,EAAAA,GAAAA,EAAO,wCAsBvD,cAAGC,KAAI,UAAKjB,EAAS,mBAAWO,GAAKW,IAAI,sBAAqB,UAnB1EjB,EAAAA,EAAAA,MAAce,EAAAA,GAAAA,EAAO,mCAAqCA,EAAAA,GAAAA,EAAO,yCAwBvD,iCACE,0BAAOA,EAAAA,GAAAA,EAAO,0BACd,iBAAML,UAAU,sBAAqB,SAAEK,EAAAA,GAAAA,EAAO,wCAO3D,C","sources":["components/Header/MobileMenu/styled.tsx","components/Header/MobileMenu/index.tsx","components/Content/index.tsx","pages/SearchFail/styled.tsx","pages/SearchFail/index.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const MobileMenusPanel = styled.div`\n  width: 100%;\n  background: #1c1c1c;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  position: -webkit-fixed;\n  z-index: 2;\n  color: white;\n  top: var(--navbar-height);\n  bottom: 0px;\n  overflow: hidden;\n`\n","import { MobileMenusPanel } from './styled'\nimport MenuItems from '../MenusComp'\nimport { SearchComp } from '../SearchComp'\nimport LanguageComp from '../LanguageComp'\nimport BlockchainComp from '../BlockchainComp'\n\nexport default () => (\n  <MobileMenusPanel>\n    <MenuItems />\n    <BlockchainComp />\n    <LanguageComp />\n    <SearchComp expanded setExpanded={() => {}} />\n  </MobileMenusPanel>\n)\n","import { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { useAppState } from '../../contexts/providers'\nimport MobileMenu from '../Header/MobileMenu'\n\nconst ContentPanel = styled.div`\n  width: 100%;\n  overflow-x: hidden;\n  flex: 1;\n  margin-top: var(--navbar-height);\n  background: #ededed;\n`\nexport default ({ children, style }: { children: ReactNode; style?: any }) => {\n  const {\n    components: { mobileMenuVisible },\n  } = useAppState()\n  return <ContentPanel style={style}>{mobileMenuVisible ? <MobileMenu /> : children}</ContentPanel>\n}\n","import styled from 'styled-components'\n\nexport const SearchPanel = styled.div`\n  margin-top: 200px;\n  margin-bottom: 240px;\n\n  @media (max-width: 750px) {\n    margin-top: 120px;\n    margin-bottom: 150px;\n  }\n\n  .search__fail__bar {\n    width: 600px;\n    margin: 0 auto;\n\n    @media (max-width: 750px) {\n      width: 340px;\n    }\n  }\n`\n\nexport const SearchContent = styled.div`\n  font-size: 14px;\n  color: #606060;\n  margin: 0 auto;\n  margin-top: 20px;\n  text-align: center;\n  white-space: pre-wrap;\n  width: 600px;\n\n  @media (max-width: 750px) {\n    width: 340px;\n  }\n\n  a {\n    color: ${props => props.theme.primary};\n    margin-left: 3px;\n  }\n\n  a:hover {\n    color: ${props => props.theme.primary};\n  }\n\n  @media (max-width: 750px) {\n    font-size: 12px;\n  }\n\n  @media (max-width: 375px) {\n    font-size: 11px;\n  }\n\n  .search__fail__items {\n    font-weight: bold;\n    font-size: 16px;\n\n    @media (max-width: 750px) {\n      font-size: 12px;\n    }\n\n    @media (max-width: 375px) {\n      font-size: 11px;\n    }\n  }\n`\n","import Content from '../../components/Content'\nimport Search from '../../components/Search'\nimport i18n from '../../utils/i18n'\nimport { SearchFailType, MAINNET_URL, TESTNET_URL } from '../../constants/common'\nimport { isMainnet } from '../../utils/chain'\nimport { SearchContent, SearchPanel } from './styled'\nimport { useSearchParams } from '../../utils/hook'\n\nconst chainErrorMessage = () =>\n  isMainnet() ? i18n.t('search.address_type_testnet_error') : i18n.t('search.address_type_mainnet_error')\n\nconst chainUrlMessage = () =>\n  isMainnet() ? i18n.t('search.address_type_testnet_url') : i18n.t('search.address_type_mainnet_url')\n\nconst targetUrl = isMainnet() ? TESTNET_URL : MAINNET_URL\n\nexport default ({ address }: { address?: string }) => {\n  const params = useSearchParams('q', 'type')\n  const { q, type } = params\n  const query = address || q\n\n  return (\n    <Content>\n      <SearchPanel className=\"container\">\n        <div className=\"search__fail__bar\">\n          <Search content={query as string} hasButton />\n        </div>\n        <SearchContent>\n          {type === SearchFailType.CHAIN_ERROR || address ? (\n            <div>\n              <span>{chainErrorMessage()}</span>\n              <a href={`${targetUrl}address/${q}`} rel=\"noopener noreferrer\">\n                {chainUrlMessage()}\n              </a>\n            </div>\n          ) : (\n            <>\n              <span>{i18n.t('search.empty_result')}</span>\n              <span className=\"search__fail__items\">{i18n.t('search.empty_result_items')}</span>\n            </>\n          )}\n        </SearchContent>\n      </SearchPanel>\n    </Content>\n  )\n}\n"],"names":["MobileMenusPanel","styled","BlockchainComp","LanguageComp","SearchComp","expanded","setExpanded","ContentPanel","children","style","mobileMenuVisible","useAppState","components","MobileMenu","SearchPanel","SearchContent","props","theme","primary","targetUrl","isMainnet","TESTNET_URL","MAINNET_URL","address","params","useSearchParams","q","type","query","Content","className","Search","content","hasButton","SearchFailType","i18n","href","rel"],"sourceRoot":""}