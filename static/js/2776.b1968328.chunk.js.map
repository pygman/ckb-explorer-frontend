{"version":3,"file":"static/js/2776.b1968328.chunk.js","mappings":"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","sources":["assets/nft_cover.svg","components/Pagination/styled.tsx","components/Pagination/index.tsx","webpack://ckb-explorer-fronted/./src/components/NftItemTransfers/styles.module.scss?a532","components/NftItemTransfers/index.tsx","webpack://ckb-explorer-fronted/./src/pages/NftInfo/styles.module.scss?0acc","pages/NftInfo/index.tsx"],"sourcesContent":["var _path, _path2, _path3, _path4;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgNftCover(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 440,\n    height: 440,\n    viewBox: \"0 0 440 440\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 7.99999C0 3.58171 3.58172 0 8 0H432C436.418 0 440 3.58172 440 8V432C440 436.418 436.418 440 432 440H7.99999C3.58171 440 0 436.418 0 432V7.99999Z\",\n    fill: \"#FAFBFA\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.893 125.303C120.893 123.239 122.869 121.748 124.854 122.315L219.216 149.276C219.653 149.401 220.106 149.464 220.56 149.464H316C317.716 149.464 319.107 150.855 319.107 152.571V314.697C319.107 316.761 317.131 318.252 315.146 317.685L220.784 290.724C220.347 290.599 219.894 290.536 219.44 290.536H124C122.284 290.536 120.893 289.145 120.893 287.429V125.303Z\",\n    fill: \"#FCFDFC\",\n    stroke: \"#E9FAEE\",\n    strokeWidth: 1.78571\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.893 314.697C120.893 316.761 122.869 318.252 124.854 317.685L219.216 290.724C219.653 290.599 220.106 290.536 220.56 290.536H316C317.716 290.536 319.107 289.145 319.107 287.429V125.303C319.107 123.239 317.131 121.748 315.146 122.315L220.784 149.276C220.347 149.401 219.894 149.464 219.44 149.464H124C122.284 149.464 120.893 150.855 120.893 152.571V314.697Z\",\n    fill: \"#FCFDFC\",\n    stroke: \"#E9FAEE\",\n    strokeWidth: 1.78571\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M208.352 239.855V199.513H201.552L202.294 229.113L195.037 199.513H185.494V239.855H192.466L191.837 209.627L198.98 239.855H208.352ZM233.837 205.741V199.513H214.066V239.855H221.552V221.855H233.094V215.855H221.552V205.741H233.837ZM258.221 205.341V199.513H235.821V205.341H243.249V239.855H250.735V205.341H258.221Z\",\n    fill: \"#B6D6C5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNftCover);\nexport default __webpack_public_path__ + \"static/media/nft_cover.e66fc7a5ab279a331c500d641fd398d9.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components'\n\nexport const PaginationPanel = styled.div`\n  display: flex;\n  width: 100%;\n  height: 50px;\n  background: white;\n  flex-direction: row;\n  justify-content: center;\n  border-radius: 0 0 6px 6px;\n  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12);\n  background-color: #ffffff;\n\n  @media (max-width: 750px) {\n    margin-bottom: 30px;\n  }\n`\n\nexport const PaginationLeftItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 3;\n  font-size: 14px;\n  text-align: center;\n  color: #000000;\n  padding-left: 20px;\n\n  @media (max-width: 750px) {\n    padding-left: 0px;\n    justify-content: flex-start;\n  }\n\n  .pagination__first__button {\n    height: 30px;\n    line-height: 30px;\n    padding: 0 8px;\n    border-radius: 6px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: #f5f5f5;\n    letter-spacing: 1px;\n    color: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isFirstPage ? '#969696' : '#000000')};\n    pointer-events: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isFirstPage ? 'none' : 'auto')};\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    @media (max-width: 750px) {\n      display: none;\n    }\n  }\n\n  .pagination__left__button {\n    margin-left: 20px;\n    width: 30px;\n    height: 30px;\n    line-height: 30px;\n    background: #f5f5f5;\n    border-radius: 6px;\n    pointer-events: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isFirstPage ? 'none' : 'auto')};\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    @media (max-width: 750px) {\n      margin-left: 10px;\n    }\n\n    > img {\n      width: 9px;\n      height: 15px;\n    }\n  }\n\n  .pagination__middle__label {\n    height: 30px;\n    display: flex;\n    align-items: center;\n    background: #f5f5f5;\n    border-radius: 6px;\n    text-align: center;\n    font-size: 12px;\n    padding: 0 12px;\n    margin-left: 20px;\n\n    @media (max-width: 750px) {\n      background: white;\n      border-radius: 0px;\n      margin-left: 10px;\n      padding: 0;\n    }\n\n    img {\n      width: 14px;\n      height: 14px;\n      margin-left: 4px;\n    }\n  }\n\n  .pagination__right__button {\n    margin-left: 20px;\n    background: #f5f5f5;\n    width: 30px;\n    height: 30px;\n    line-height: 30px;\n    border-radius: 6px;\n    pointer-events: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isLastPage ? 'none' : 'auto')};\n\n    @media (max-width: 750px) {\n      margin-left: 10px;\n    }\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    > img {\n      width: 9px;\n      height: 15px;\n    }\n  }\n\n  .pagination__last__button {\n    height: 30px;\n    line-height: 30px;\n    padding: 0 8px;\n    border-radius: 6px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: #f5f5f5;\n    letter-spacing: 1px;\n    margin-left: 20px;\n    color: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isLastPage ? '#969696' : '#000000')};\n    pointer-events: ${(props: { isFirstPage: boolean; isLastPage: boolean }) => (props.isLastPage ? 'none' : 'auto')};\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    @media (max-width: 750px) {\n      display: none;\n    }\n  }\n`\n\nexport const PaginationRightItem = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 2;\n  font-size: 14px;\n  color: #000000;\n  padding-right: 20px;\n\n  @media (max-width: 750px) {\n    padding-right: 0px;\n    justify-content: flex-end;\n  }\n\n  .pagination__input__page {\n    width: 120px;\n    height: 30px;\n    border: none;\n    border-radius: 6px;\n    background-color: #f5f5f5;\n    color: grey;\n    outline: none;\n    margin-right: 20px;\n    padding-left: 10px;\n\n    @media (max-width: 750px) {\n      width: 60px;\n      margin-right: 0px;\n      padding-left: 8px;\n      font-size: 12px;\n    }\n  }\n\n  .pagination__page__label {\n    margin-right: 20px;\n\n    @media (max-width: 750px) {\n      display: none;\n    }\n  }\n\n  .pagination__goto__page {\n    height: 30px;\n    line-height: 30px;\n    padding: 0 8px;\n    border-radius: 6px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: #f5f5f5;\n    letter-spacing: 1px;\n    margin-left: 20px;\n\n    &:hover {\n      background: #dddddd;\n    }\n\n    @media (max-width: 750px) {\n      margin: 0 10px;\n      font-size: 12px;\n    }\n  }\n`\n","import { useState } from 'react'\nimport { Tooltip } from 'antd'\nimport { PaginationLeftItem, PaginationRightItem, PaginationPanel } from './styled'\nimport LeftBlack from '../../assets/pagination_black_left.png'\nimport RightBlack from '../../assets/pagination_black_right.png'\nimport LeftGrey from '../../assets/pagination_grey_left.png'\nimport RightGrey from '../../assets/pagination_grey_right.png'\nimport HelpIcon from '../../assets/qa_help.png'\nimport i18n from '../../utils/i18n'\nimport { useIsMobile } from '../../utils/hook'\nimport SimpleButton from '../SimpleButton'\n\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  gotoPage = currentPage === totalPages ? totalPages : currentPage + 1,\n  onChange,\n  className,\n  annotation,\n}: {\n  currentPage: number\n  totalPages: number\n  gotoPage?: number\n  onChange: (page: number) => void\n  className?: string\n  annotation?: string\n}) => {\n  const isMobile = useIsMobile()\n  const [inputPage, setInputPage] = useState(gotoPage)\n\n  const total = Math.max(totalPages, 1)\n  const current = Math.min(Math.max(currentPage, 1), totalPages)\n\n  const mobilePagination = `${i18n.t('pagination.total_page')} ${total} ${i18n.t('pagination.end_page')}`\n  const pcPagination = `${i18n.t('pagination.current_page')} ${current} ${i18n.t(\n    'pagination.of_page',\n  )} ${total} ${i18n.t('pagination.end_page')}`\n\n  const annotationComp = annotation ? (\n    <Tooltip placement=\"top\" title={annotation}>\n      <img src={HelpIcon} alt=\"annotation\" />\n    </Tooltip>\n  ) : null\n\n  const changePage = (page: number) => {\n    if (page && page >= 1 && page <= total) {\n      onChange(page)\n      setInputPage(Math.min(page + 1, total))\n    }\n  }\n\n  return (\n    <PaginationPanel className={className}>\n      <PaginationLeftItem isFirstPage={current === 1} isLastPage={current === total}>\n        <SimpleButton className=\"pagination__first__button\" onClick={() => changePage(1)}>\n          {i18n.t('pagination.first')}\n        </SimpleButton>\n        <SimpleButton className=\"pagination__left__button\" onClick={() => changePage(current - 1)}>\n          <img src={current === 1 ? LeftGrey : LeftBlack} alt=\"left button\" />\n        </SimpleButton>\n\n        {!isMobile && (\n          <span className=\"pagination__middle__label\">\n            {pcPagination}\n            {annotationComp}\n          </span>\n        )}\n        <SimpleButton className=\"pagination__right__button\" onClick={() => changePage(current + 1)}>\n          <img src={current === total ? RightGrey : RightBlack} alt=\"right button\" />\n        </SimpleButton>\n        {isMobile && (\n          <span className=\"pagination__middle__label\">\n            {mobilePagination}\n            {annotationComp}\n          </span>\n        )}\n\n        <SimpleButton className=\"pagination__last__button\" onClick={() => changePage(total)}>\n          {i18n.t('pagination.last')}\n        </SimpleButton>\n      </PaginationLeftItem>\n      <PaginationRightItem>\n        <span className=\"pagination__page__label\">{i18n.t('pagination.page')}</span>\n        <input\n          type=\"text\"\n          pattern=\"[0-9]*\"\n          className=\"pagination__input__page\"\n          value={inputPage}\n          onChange={(event: any) => {\n            const pageNo = parseInt(event.target.value, 10)\n            setInputPage(Number.isNaN(pageNo) ? event.target.value : Math.min(pageNo, total))\n          }}\n          onKeyUp={(event: any) => {\n            if (event.keyCode === 13) {\n              changePage(inputPage)\n            }\n          }}\n        />\n        <SimpleButton className=\"pagination__goto__page\" onClick={() => changePage(inputPage)}>\n          {i18n.t('pagination.goto')}\n        </SimpleButton>\n      </PaginationRightItem>\n    </PaginationPanel>\n  )\n}\n\nexport default Pagination\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"styles_list__N6Qi5\",\"item\":\"styles_item__cvIF2\",\"icon\":\"styles_icon__u4+8a\",\"defaultIcon\":\"styles_defaultIcon__Va1lO\",\"noRecord\":\"styles_noRecord__w8XZj\",\"age\":\"styles_age__+d4Hj\"};","import { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Tooltip } from 'antd'\nimport i18n from '../../utils/i18n'\nimport { getPrimaryColor } from '../../constants/common'\nimport { dayjs, parseDate } from '../../utils/date'\nimport styles from './styles.module.scss'\n\nconst primaryColor = getPrimaryColor()\n\nexport interface TransferListRes {\n  data: Array<{\n    id: number\n    from: string | null\n    to: string | null\n    action: 'mint' | 'normal' | 'destruction'\n    item: {\n      id: number\n      collection_id: number\n      token_id: string\n      name: string | null\n      icon_url: string | null\n      owner_id: number\n      metadata_url: string | null\n      cell_id: number | null\n    }\n    transaction: {\n      tx_hash: string\n      block_number: number\n      block_timestamp: number\n    }\n  }>\n  pagination: {\n    count: number\n    page: number\n    next: number | null\n    prev: number | null\n    last: number\n  }\n}\nconst NftItemTransfers: React.FC<{ list: TransferListRes['data']; isLoading: boolean }> = ({ list, isLoading }) => {\n  const [isShowInAge, setIsShowInAge] = useState(false)\n  dayjs.locale(i18n.language === 'zh' ? 'zh-cn' : 'en')\n\n  return (\n    <div className={styles.list}>\n      <table>\n        <thead>\n          <tr>\n            <th>{i18n.t('nft.tx_hash')}</th>\n            <th>{i18n.t('nft.action')}</th>\n            <th>\n              <span\n                role=\"presentation\"\n                onClick={() => setIsShowInAge(show => !show)}\n                className={styles.age}\n                title={i18n.t('nft.toggle-age')}\n                style={{\n                  color: primaryColor,\n                }}\n              >\n                {i18n.t('nft.age')}\n              </span>\n            </th>\n            <th>{i18n.t('nft.from')}</th>\n            <th>{i18n.t('nft.to')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {list.length ? (\n            list.map(item => {\n              return (\n                <tr key={item.id}>\n                  <td>\n                    <Link\n                      to={`/transaction/${item.transaction.tx_hash}`}\n                      title={item.transaction.tx_hash}\n                      style={{\n                        color: primaryColor,\n                        fontWeight: 700,\n                      }}\n                    >\n                      <Tooltip title={item.transaction.tx_hash}>\n                        <span className=\"monospace\">\n                          {`${item.transaction.tx_hash.slice(0, 10)}...${item.transaction.tx_hash.slice(-10)}`}\n                        </span>\n                      </Tooltip>\n                    </Link>\n                  </td>\n                  <td>{i18n.t(`nft.action_type.${item.action}`)}</td>\n                  <td>\n                    {isShowInAge\n                      ? dayjs(item.transaction.block_timestamp).fromNow()\n                      : parseDate(item.transaction.block_timestamp)}\n                  </td>\n                  <td>\n                    {item.from ? (\n                      <Link\n                        to={`/address/${item.from}`}\n                        style={{\n                          color: primaryColor,\n                          fontWeight: 700,\n                        }}\n                      >\n                        <Tooltip title={item.from}>\n                          <span className=\"monospace\">{`${item.from.slice(0, 8)}...${item.from.slice(-8)}`}</span>\n                        </Tooltip>\n                      </Link>\n                    ) : (\n                      '-'\n                    )}\n                  </td>\n                  <td>\n                    {item.to ? (\n                      <Link\n                        to={`/address/${item.to}`}\n                        style={{\n                          color: primaryColor,\n                          fontWeight: 700,\n                        }}\n                      >\n                        <Tooltip title={item.to}>\n                          <span className=\"monospace\">{`${item.to.slice(0, 8)}...${item.to.slice(-8)}`}</span>\n                        </Tooltip>\n                      </Link>\n                    ) : (\n                      '-'\n                    )}\n                  </td>\n                </tr>\n              )\n            })\n          ) : (\n            <tr>\n              <td colSpan={5} className={styles.noRecord}>\n                {isLoading ? i18n.t('nft.loading') : i18n.t(`nft.no_record`)}\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <ul>\n        {list.length ? (\n          list.map(item => (\n            <li key={item.id}>\n              <dl>\n                <div>\n                  <dt>{i18n.t('nft.tx_hash')}</dt>\n                  <dd>\n                    <Link\n                      to={`/transaction/${item.transaction.tx_hash}`}\n                      title={item.transaction.tx_hash}\n                      style={{\n                        color: primaryColor,\n                        fontWeight: 700,\n                      }}\n                    >\n                      <Tooltip title={item.transaction.tx_hash}>\n                        <span className=\"monospace\">\n                          {`${item.transaction.tx_hash.slice(0, 10)}...${item.transaction.tx_hash.slice(-10)}`}\n                        </span>\n                      </Tooltip>\n                    </Link>\n                  </dd>\n                </div>\n                <div>\n                  <dt>{i18n.t('nft.action')}</dt>\n                  <dd>{i18n.t(`nft.action_type.${item.action}`)}</dd>\n                </div>\n                <div>\n                  <dt>{i18n.t('nft.age')}</dt>\n                  <dd>{parseDate(item.transaction.block_timestamp)}</dd>\n                </div>\n                <div>\n                  <dt>{i18n.t('nft.from')}</dt>\n                  <dd>\n                    {item.from ? (\n                      <Link\n                        to={`/address/${item.from}`}\n                        style={{\n                          color: primaryColor,\n                          fontWeight: 700,\n                        }}\n                      >\n                        <Tooltip title={item.from}>\n                          <span className=\"monospace\">{`${item.from.slice(0, 10)}...${item.from.slice(-10)}`}</span>\n                        </Tooltip>\n                      </Link>\n                    ) : (\n                      '-'\n                    )}\n                  </dd>\n                </div>\n                <div>\n                  <dt>{i18n.t('nft.to')}</dt>\n                  <dd>\n                    {item.to ? (\n                      <Link\n                        to={`/address/${item.to}`}\n                        style={{\n                          color: primaryColor,\n                          fontWeight: 700,\n                        }}\n                      >\n                        <Tooltip title={item.to}>\n                          <span className=\"monospace\">{`${item.to.slice(0, 10)}...${item.to.slice(-10)}`}</span>\n                        </Tooltip>\n                      </Link>\n                    ) : (\n                      '-'\n                    )}\n                  </dd>\n                </div>\n              </dl>\n            </li>\n          ))\n        ) : (\n          <li>{isLoading ? i18n.t('nft.loading') : i18n.t(`nft.no_record`)}</li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nNftItemTransfers.displayName = 'NftTransfers'\n\nexport default NftItemTransfers\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__rCUf9\",\"overview\":\"styles_overview__KMIEq\",\"info\":\"styles_info__byJ4o\",\"cover\":\"styles_cover__FpIx+\",\"name\":\"styles_name__XqFap\",\"items\":\"styles_items__klu2g\",\"itmes\":\"styles_itmes__0N4pg\",\"tab\":\"styles_tab__zxWyJ\"};","import type { AxiosResponse } from 'axios'\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport { useQuery } from 'react-query'\nimport { Tooltip } from 'antd'\nimport i18n from '../../utils/i18n'\nimport NftItemTransfers, { TransferListRes } from '../../components/NftItemTransfers'\nimport Pagination from '../../components/Pagination'\nimport { ReactComponent as Cover } from '../../assets/nft_cover.svg'\nimport { v2AxiosIns } from '../../service/http/fetcher'\nimport { getPrimaryColor } from '../../constants/common'\nimport styles from './styles.module.scss'\nimport { patchMibaoImg, handleNftImgError } from '../../utils/util'\nimport { useSearchParams } from '../../utils/hook'\n\nconst primaryColor = getPrimaryColor()\n\nconst NftInfo = () => {\n  const { id, collection } = useParams<Record<'collection' | 'id', string>>()\n  const history = useHistory()\n  const { page = '1' } = useSearchParams('page')\n  const { data } = useQuery<\n    AxiosResponse<{\n      id: number\n      collection_id: number\n      token_id: string\n      name: string | null\n      icon_url: string | null\n      owner: string | null\n      metadata_url: string | null\n      collection: {\n        id: number\n        standard: string\n        name: string\n        creator: string\n        icon_url: string\n      }\n    }>\n  >(['nft-item-info', collection, id], () => v2AxiosIns(`nft/collections/${collection}/items/${id}`))\n\n  const { isLoading: isTransferListLoading, data: transferListRes } = useQuery<AxiosResponse<TransferListRes>>(\n    ['nft-item-transfer-list', collection, id, page],\n    () =>\n      v2AxiosIns(`/nft/transfers`, {\n        params: {\n          page,\n          collection_id: collection,\n          token_id: id,\n        },\n      }),\n  )\n\n  const handlePageChange = (pageNo: number) => {\n    if (pageNo === +page) {\n      return\n    }\n    history.push(`/nft-info/${collection}/${id}?page=${pageNo}`)\n  }\n  const coverUrl = data?.data.icon_url || data?.data.collection.icon_url\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.overview}>\n        {coverUrl ? (\n          <img\n            src={`${patchMibaoImg(coverUrl)}?size=medium&tid=${data?.data.token_id}`}\n            alt=\"cover\"\n            loading=\"lazy\"\n            className={styles.cover}\n            onError={handleNftImgError}\n          />\n        ) : (\n          <Cover className={styles.cover} />\n        )}\n        <div className={styles.info}>\n          <div className={styles.name}>{data ? `${data.data.collection.name} #${data.data.token_id}` : '-'}</div>\n          <div className={styles.items}>\n            <dl>\n              <dt>{i18n.t('nft.owner')}</dt>\n              <dd>\n                {data?.data.owner ? (\n                  <Link\n                    to={`/address/${data.data.owner}`}\n                    style={{\n                      fontWeight: 700,\n                      color: primaryColor,\n                    }}\n                  >\n                    <Tooltip title={data.data.owner}>\n                      <span className=\"monospace\">{`${data.data.owner.slice(0, 12)}...${data.data.owner.slice(\n                        -12,\n                      )}`}</span>\n                    </Tooltip>\n                  </Link>\n                ) : (\n                  '-'\n                )}\n              </dd>\n            </dl>\n            <dl>\n              <dt>{i18n.t('nft.minter_address')}</dt>\n              <dd>\n                {data?.data.collection.creator ? (\n                  <Link\n                    to={`/address/${data.data.collection.creator}`}\n                    style={{\n                      fontWeight: 700,\n                      color: primaryColor,\n                    }}\n                  >\n                    <Tooltip title={data.data.collection.creator}>\n                      <span className=\"monospace\">{`${data.data.collection.creator.slice(\n                        0,\n                        12,\n                      )}...${data.data.collection.creator.slice(-12)}`}</span>\n                    </Tooltip>\n                  </Link>\n                ) : (\n                  '-'\n                )}\n              </dd>\n            </dl>\n            <dl>\n              <dt>Token ID</dt>\n              <dd>{`#${data?.data.token_id}`}</dd>\n            </dl>\n            <dl>\n              <dt>{i18n.t('nft.standard')}</dt>\n              <dd>{data ? i18n.t(`nft.${data.data.collection.standard}`) : '-'}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className={styles.tab}>{i18n.t(`nft.activity`)}</div>\n        <NftItemTransfers list={transferListRes?.data.data ?? []} isLoading={isTransferListLoading} />\n        <Pagination\n          currentPage={transferListRes?.data.pagination.page ?? 1}\n          totalPages={transferListRes?.data.pagination.last ?? 1}\n          onChange={handlePageChange}\n        />\n      </div>\n    </div>\n  )\n}\n\nNftInfo.displayName = 'NftInfo'\n\nexport default NftInfo\n"],"names":["_path","_path2","_path3","_path4","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgNftCover","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","ForwardRef","PaginationPanel","styled","PaginationLeftItem","isFirstPage","isLastPage","PaginationRightItem","currentPage","totalPages","gotoPage","onChange","className","annotation","isMobile","useIsMobile","useState","inputPage","setInputPage","total","Math","max","current","min","mobilePagination","i18n","pcPagination","annotationComp","placement","src","HelpIcon","alt","changePage","page","SimpleButton","onClick","type","pattern","value","event","pageNo","parseInt","Number","isNaN","onKeyUp","keyCode","primaryColor","getPrimaryColor","NftItemTransfers","list","isLoading","isShowInAge","setIsShowInAge","dayjs","styles","role","show","style","color","map","item","to","transaction","tx_hash","fontWeight","slice","action","block_timestamp","fromNow","parseDate","from","colSpan","displayName","NftInfo","useParams","collection","history","useHistory","useSearchParams","data","useQuery","v2AxiosIns","params","collection_id","token_id","isTransferListLoading","transferListRes","coverUrl","icon_url","patchMibaoImg","loading","onError","handleNftImgError","name","owner","creator","standard","Pagination","pagination","last","push"],"sourceRoot":""}